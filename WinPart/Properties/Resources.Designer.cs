//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WinPart.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("WinPart.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to uint16   Availability
        ///uint32   BytesPerSector
        ///uint16   Capabilities[]
        ///string   CapabilityDescriptions[]
        ///string   Caption
        ///string   CompressionMethod
        ///uint32   ConfigManagerErrorCode
        ///boolean  ConfigManagerUserConfig
        ///string   CreationClassName
        ///uint64   DefaultBlockSize
        ///string   Description
        ///string   DeviceID
        ///boolean  ErrorCleared
        ///string   ErrorDescription
        ///string   ErrorMethodology
        ///string   FirmwareRevision
        ///uint32   Index
        ///datetime InstallDate
        ///string   InterfaceType
        ///uint32   LastErrorCode
        ///strin [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Device {
            get {
                return ResourceManager.GetString("Device", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to uint16   Access
        ///uint16   Availability
        ///uint64   BlockSize
        ///string   Caption
        ///boolean  Compressed
        ///uint32   ConfigManagerErrorCode
        ///boolean  ConfigManagerUserConfig
        ///string   CreationClassName
        ///string   Description
        ///string   DeviceID
        ///uint32   DriveType
        ///boolean  ErrorCleared
        ///string   ErrorDescription
        ///string   ErrorMethodology
        ///string   FileSystem
        ///uint64   FreeSpace
        ///datetime InstallDate
        ///uint32   LastErrorCode
        ///uint32   MaximumComponentLength
        ///uint32   MediaType
        ///string   Name
        ///uint64   NumberOfBlocks
        /// [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string LogicalDrive {
            get {
                return ResourceManager.GetString("LogicalDrive", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to unit16   AdditionalAvailability
        ///uint16   Availability
        ///uint16   PowerManagementCapabilities[]
        ///string   IdentifyingDescriptions[1]
        ///uint64   MaxQuiesceTime
        ///uint64   OtherIdentifyingInfo
        ///uint16   StatusInfo
        ///uint64   PowerOnHours
        ///uint64   TotalPowerOnHours
        ///uint16   Access
        ///uint64   BlockSize
        ///boolean  Bootable
        ///boolean  BootPartition
        ///string.  Caption
        ///uint32   ConfigManagerErrorCode
        ///boolean  ConfigManagerUserConfig
        ///string.  CreationClassName
        ///string   Description
        ///string   DeviceID
        ///uint32   DiskInde [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Partition {
            get {
                return ResourceManager.GetString("Partition", resourceCulture);
            }
        }
    }
}
